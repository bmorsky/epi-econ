using OrdinaryDiffEq, Parameters, NonlinearSolve

# Parameters
T = 300 # final time
tspan = (0,T)

p = (α = 0.5, β₁= 0.3, β₂ = 0.2, βᵤ = 0.2,
      γ = 1/7, λ₁ = 0.001096, λ₂ = 0.005479, μ = 0.01517,
      ρ = 0.01, b = 0.4, c₁ = 0.1731, c₂ = 0.0725, d = 1.0,
      r = 0.000137, y₁ = 1.0141, y₂ = 0.9141, bg = 0.0, η = 0.5)

b₂ = 0.2


#    α,   β₁,  β₂,  βᵤ,  γ,   λ₁,     λ₂,     μ,     ρ,    b,    c₁,  c₂,  d, r,    y₁,  y₂,  bg
# p = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#       γ = 1/7, λ₁ = 0.001096, λ₂ = 0.005479, μ = 0.01517,
#       ρ = 0.01, b = 0.71, c₁ = 2.072, c₂ = 0.4145, d = 1.0,
#       r = 0.000137, y₁ =  2.68, y₂ = 2.53, bg = 0.0, η = 0.5)

# pinit = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#       γ = 1/7, λ₁ = 0.001096, λ₂ = 0.005479, μ = 0.01517,
#       ρ = 0.01, b = 0.71, f = 0.5, d = 1.0,
#       r = 0.000137, y₁ =  2.68, y₂ = 2.53, bg = 0.0, η = 0.5)


# p = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#       γ = 1/7, λ₁ = 0.001096, λ₂ = 0.001096, μ = 0.01479,
#       ρ = 0.01, b = 0.71/7, c₁ = 0.16302910052, c₂ = 0.16302910052*0.5, d = 1.0,
#       r = 0.02/100, y₁ =  1.1/7, y₂ = 1.0/7, bg = 0.0, η = 0.5)
# p = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#      γ = 1/7, λ₁ = 0.001, λ₂ = 0.001, μ = 0.072,
#      ρ = 0.01, b = 0.2, c₁ = 0.2761, c₂ = 0.2761, d = 1.0,
#      r = 0.00013, y₁ =  1.139, y₂ = 1.139*0.95, bg = 0.0, η = 0.5)
# p = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#      γ = 1/7, λ₁ = 0.0033, λ₂ = 0.0033, μ = 0.072,
#      ρ = 0.01, b = 0.71, c₁ = 0.2761, c₂ = 0.2761, d = 1.0,
#      r = 0.004, y₁ =  1.1, y₂ = 1.0, bg = 0.0, η = 0.5)
# p = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#      γ = 1/7, λ₁ = 0.0033, λ₂ = 0.0033, μ = 0.072,
#      ρ = 0.01, b = 0.71, c₁ = 0.1, c₂ = 0.1, d = 1.0,
#      r = 0.02, y₁ = 1.1, y₂ = 1.0, bg = 0.0, η = 0.5)
# p = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#      γ = 1/7, λ₁ = 0.001, λ₂ = 0.001, μ = 0.01061,
#      ρ = 0.01, b = 0.71/7, c₁ = 0.04098, c₂ = 0.04098, d = 1.0,
#      r = 0.00013, y₁ =  1.014/7, y₂ = y₁*0.9, bg = 0.0, η = 0.5)

# pinit = (α = 0.5, β₁= 0.4, β₂ = 0.3, βᵤ = 0.2,
#       γ = 1/7, λ₁ = 0.001096, λ₂ = 0.005479, μ = 0.01517,
#       ρ = 0.01, b = 0.71, f = 0.5, d = 1.0,
#       r = 0.000137, y₁ =  2.68, y₂ = 2.53, bg = 0.0, η = 0.5)

# function c_theta_g(u, pinit)
#     @unpack α,β₁,β₂,βᵤ,γ,λ₁,λ₂,μ,ρ,b,f,d,r,y₁,y₂,bg,η = pinit
#     return [(1-α)*(y₁-b) - u[1]*(α*(1+f*max(1e-12,u[2])) + (r+λ₁)/μ);
#                 (1-α)*(y₂-b) - u[1]*(α*(1+f*max(1e-12,u[2])) + (f*(r+λ₂)*max(1e-12,u[2])^η)/μ)]
# end


# function c_theta_g(u, pinit)
#     @unpack α,β₁,β₂,βᵤ,γ,λ₁,λ₂,μ,ρ,b,f,d,r,y₁,y₂,bg,η = pinit
#     return [(1-α)*(y₁-b) - u[1]*(α*(1+f*max(1e-12,u[2])) + (r+λ₁)/μ);
#                 (1-α)*(y₂-b) - u[1]*(α*(1+f*max(1e-12,u[2])) + (f*(r+λ₂)*max(1e-12,u[2])^η)/μ)]
# end
    
# prob = NonlinearProblem(c_theta_g, [0.5,0.05], pinit)
# sol = solve(prob)

p_gig = merge(p,(;β₂ = 0.3, bg = 0.01)) # Copy p but change bg
p_quar = merge(p,(;β₂ = 0.3, λ₁ = 1.5*0.0033)) # Copy p but with changes to λ

# function init_theta(du, u, p, t)
#     Θ₁,Θ₂ = u
#     @unpack α,β₁,β₂,βᵤ,γ,λ₁,λ₂,μ,ρ,b,c₁,c₂,d,r,y₁,y₂,bg,η = p
#     P(Θ) = μ*(max(Θ, 1e-6))^(1-η)
#     Q(Θ) = μ*(max(Θ, 1e-6))^(-η)
#     du[1] = dΘ₁ = ((1-α)*(y₁ - b) - α*c₁*Θ₁ - α*c₂*Θ₂ - c₁*(r+λ₁)/Q(Θ₁))
#     du[2] = dΘ₂ = ((1-α)*(y₂ - b) - α*c₁*Θ₁ - α*c₂*Θ₂ - c₂*(r+λ₂)/Q(Θ₂))
# end
# prob = ODEProblem(init_theta, [1,1], tspan, p)
# sol = solve(prob,saveat=0.1, RadauIIA5(), reltol=1e-8, abstol=1e-8)

function econ_ode(du, u, p, t)
    S₁,S₂,Sᵤ,Θ₁,Θ₂ = u
    @unpack α,β₁,β₂,βᵤ,γ,λ₁,λ₂,μ,ρ,b,c₁,c₂,d,r,y₁,y₂,bg,η = p
    P(Θ) = μ*(max(Θ, 1e-12))^(1-η)
    Q(Θ) = μ*(max(Θ, 1e-12))^(-η)
    #W(b,dI) = V_{j,s}\dot{S}_j + V_{j,i}\dot{I}_j + V_{j,r}\dot{R}_j - V_{u,s}\dot{S}_u - V_{u,i}\dot{I}_u - V_{u,r}\dot{R}_u

    du[1] = dS₁ = P(Θ₁)*Sᵤ - λ₁*S₁
    du[2] = dS₂ = P(Θ₂)*Sᵤ - λ₂*S₂
    du[3] = 1.0-sum(u[1:3])
    du[4] = dΘ₁ = ((1-α)*(y₁ - b) - α*c₁*Θ₁ - α*c₂*Θ₂ - c₁*(r+λ₁)/Q(Θ₁))
    du[5] = dΘ₂ = ((1-α)*(y₂ - b + b₂) - α*c₁*Θ₁ - α*c₂*Θ₂ - c₂*(r+λ₂)/Q(Θ₂))
end
Mecon = zeros(5,5); [Mecon[j,j] = 1 for j in [1:2...]]
    # Disease free dynamics
econ = ODEFunction(econ_ode,mass_matrix=Mecon)
prob = ODEProblem(econ, [0.33,0.34,0.33,1.0,0.35341731768728646], (0.0,10000.0), p)
sol = solve(prob,saveat=0.1, RadauIIA5(), reltol=1e-8, abstol=1e-8)
SE₀ = sol[end][1]
SG₀ = sol[end][2]
SU₀ = 1.0 - SE₀ - SG₀
Θ1₀ = sol[end][4]
Θ2₀ = sol[end][5]

# System of ODEs
function epiecon_ode(du, u, p, t)
    S₁,I₁,R₁,S₂,I₂,R₂,Sᵤ,Iᵤ,Rᵤ,Θ₁,Θ₂ = u
    @unpack α,β₁,β₂,βᵤ,γ,λ₁,λ₂,μ,ρ,b,c₁,c₂,d,r,y₁,y₂,bg,η = p
    P(Θ) = μ*(max(Θ, 1e-12))^(1-η)
    Q(Θ) = μ*(max(Θ, 1e-12))^(-η)
    #W(b,dI) = V_{j,s}\dot{S}_j + V_{j,i}\dot{I}_j + V_{j,r}\dot{R}_j - V_{u,s}\dot{S}_u - V_{u,i}\dot{I}_u - V_{u,r}\dot{R}_u

    du[1] = dS₁ = ρ*R₁ - β₁*S₁*(I₁+I₂+Iᵤ) + P(Θ₁)*Sᵤ - λ₁*S₁
    du[2] = dI₁ = β₁*S₁*(I₁+I₂+Iᵤ) - (γ+λ₁)*I₁ + P(Θ₁)*Iᵤ
    du[3] = dR₁ = γ*I₁ - ρ*R₁ + P(Θ₁)*Rᵤ - λ₁*R₁
    du[4] = dS₂ = ρ*R₂ - β₂*S₂*(I₁+I₂+Iᵤ) + P(Θ₂)*Sᵤ - λ₂*S₂
    du[5] = dI₂ = β₂*S₂*(I₁+I₂+Iᵤ) - (γ+λ₂)*I₂ + P(Θ₂)*Iᵤ
    du[6] = dR₂ = γ*I₂ - ρ*R₂ + P(Θ₂)*Rᵤ - λ₂*R₂
    du[7] = dSᵤ = ρ*Rᵤ - βᵤ*Sᵤ*(I₁+I₂+Iᵤ) - (P(Θ₁)+P(Θ₂))*Sᵤ + λ₁*S₁+λ₂*S₂
    du[8] = dIᵤ = βᵤ*Sᵤ*(I₁+I₂+Iᵤ) - γ*Iᵤ + λ₁*I₁ + λ₂*I₂ - (P(Θ₁)+P(Θ₂))*Iᵤ
    # du[9] = dRᵤ = γ*Iᵤ - ρ*Rᵤ - (P(Θ₁)+P(Θ₂))*Rᵤ + λ₁*R₁ + λ₂*R₂
    du[9] = 1.0-sum(u[1:9])
    du[10] = dΘ₁ = ((1-α)*(y₁*((S₁+R₁)/(S₁+I₁+R₁)) - b) - α*c₁*Θ₁ - α*c₂*Θ₂ - c₁*(r+λ₁)/Q(Θ₁))
    du[11] = dΘ₂ = ((1-α)*(y₂*((S₂+R₂)/(S₂+I₂+R₂)) + b₂ - b) - α*c₁*Θ₁ - α*c₂*Θ₂ - c₂*(r+λ₂)/Q(Θ₂))
end
M = zeros(11,11); [M[j,j] = 1 for j in [1:8...]]
# Disease free dynamics
epiecon = ODEFunction(epiecon_ode,mass_matrix=M)

# f(x) = -We + α*x + (1-α)*b + α*((μ₁*(x-We))/(r+λ₁))*(1 + ϕ*(((μ₁*(x+(Wg-We)/α-Wg))*(λ₁+r))/(μ₂*ϕ*(λ₂+r)*(x-We)))^(1/η))